# Generated by Django 4.2 on 2023-05-05 07:23

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DailyTest',
            fields=[
                ('index', models.AutoField(db_column='Index', primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(db_column='Date_added')),
                ('gantry', models.IntegerField(db_column='Gantry')),
                ('visionrt_check', models.IntegerField(blank=True, db_column='VisionRT_check', null=True)),
                ('flatpanels_check', models.IntegerField(blank=True, db_column='FlatPanels_check', null=True)),
                ('dynr', models.IntegerField(blank=True, db_column='DynR', null=True)),
                ('lasers', models.IntegerField(blank=True, db_column='Lasers', null=True)),
                ('temperature', models.DecimalField(blank=True, db_column='Temperature', decimal_places=2, max_digits=10, null=True)),
                ('pressure', models.DecimalField(blank=True, db_column='Pressure', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'daily_test',
                'db_table_comment': 'Lasers stored as binary number (0-x, 1-z, 2-y)',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DIcConfig',
            fields=[
                ('configid', models.IntegerField(db_column='configID', primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'd_ic_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DIcDavkaReference',
            fields=[
                ('index', models.AutoField(db_column='Index', primary_key=True, serialize=False)),
                ('gantry', models.IntegerField(blank=True, db_column='Gantry', null=True)),
                ('energy_mev_field', models.IntegerField(db_column='Energy[MeV]')),
                ('version', models.IntegerField(blank=True, null=True)),
                ('ref_dose_corric2_gy_field', models.DecimalField(blank=True, db_column='Ref.dose.corrIC2[Gy]', decimal_places=5, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'd_ic_davka_reference',
                'db_table_comment': 'FBTR1: IK 3190 s Dose 1 16101\nGTR2: IK 4218 s Dose 1 16091\nGTR3: IK 5414 s Dose 1 14485\nGTR4: IK 5414 s Dose 1 16098',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DIcKoefReference',
            fields=[
                ('sn', models.IntegerField(db_column='SN', primary_key=True, serialize=False)),
                ('ic', models.CharField(db_column='IC', max_length=20)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('gantry', models.CharField(blank=True, db_column='Gantry', max_length=10, null=True)),
                ('ndw', models.IntegerField(db_column='Ndw')),
                ('ksat', models.DecimalField(db_column='Ksat', decimal_places=4, max_digits=10)),
                ('kpol', models.DecimalField(db_column='Kpol', decimal_places=4, max_digits=10)),
                ('kqq0', models.DecimalField(db_column='kQQ0', decimal_places=4, max_digits=10)),
                ('ref_response_corr_for_t_and_p', models.DecimalField(blank=True, db_column='Ref.response.corr.for.T.and.P', decimal_places=4, max_digits=10, null=True)),
                ('ref_response_date', models.DateField(blank=True, db_column='Ref.response.date', null=True)),
                ('cert_with_electrometer', models.CharField(blank=True, db_column='Cert.with.electrometer', max_length=45, null=True)),
                ('cert_for_voltage', models.IntegerField(blank=True, db_column='Cert.for.voltage', null=True)),
                ('cert_validity', models.DateField(blank=True, db_column='Cert.validity', null=True)),
                ('number_90sr_ref_value', models.DecimalField(blank=True, db_column='90Sr.ref.value', decimal_places=4, max_digits=10, null=True)),
                ('number_90sr_ref_value_date', models.DateField(blank=True, db_column='90Sr.ref.value.date', null=True)),
            ],
            options={
                'db_table': 'd_ic_koef_reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DIcMeasurement',
            fields=[
                ('measurementid', models.IntegerField(db_column='measurementID', primary_key=True, serialize=False)),
                ('ic_id', models.IntegerField(blank=True, db_column='IC_ID', null=True)),
                ('energy', models.IntegerField(blank=True, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'd_ic_measurement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DLynxConfig',
            fields=[
                ('configid', models.IntegerField(db_column='configID', primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'd_lynx_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DLynxMeasurement',
            fields=[
                ('measurementid', models.IntegerField(db_column='measurementID', primary_key=True, serialize=False)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('lynxid', models.IntegerField(blank=True, db_column='LynxID', null=True)),
                ('energy', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'd_lynx_measurement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DLynxReference',
            fields=[
                ('index', models.IntegerField(db_column='Index', primary_key=True, serialize=False)),
                ('lynx', models.CharField(db_column='Lynx', max_length=25)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('iris', models.IntegerField(blank=True, db_column='Iris', null=True)),
                ('reference_maps', models.CharField(blank=True, max_length=45, null=True)),
                ('reference_maps_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'd_lynx_reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DMlicConfig',
            fields=[
                ('configid', models.IntegerField(db_column='configID', primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'd_mlic_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DMlicMeasurement',
            fields=[
                ('measurementid', models.IntegerField(db_column='measurementID', primary_key=True, serialize=False)),
                ('energy', models.IntegerField(blank=True, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'd_mlic_measurement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DMlicReference',
            fields=[
                ('index', models.AutoField(db_column='Index', primary_key=True, serialize=False)),
                ('e_mev_field', models.IntegerField(db_column='E [MeV]')),
                ('gantry', models.IntegerField(blank=True, db_column='Gantry', null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('ref_90_g_cm2_field', models.DecimalField(blank=True, db_column='Ref 90 [g/cm2]', decimal_places=2, max_digits=10, null=True)),
                ('ref_distal_spad_g_cm2_field', models.DecimalField(blank=True, db_column='Ref distal spad [g/cm2]', decimal_places=3, max_digits=10, null=True)),
                ('dosah_na_vstupu_nozzle_g_cm2_field', models.DecimalField(blank=True, db_column='Dosah na vstupu nozzle [g/cm2]', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'd_mlic_reference',
                'db_table_comment': 'MLIC SN18206 (k datu 1/2023) \\nRef 90 u energi� 100,170,226 se pou��v� p�� denn�\n',
                'managed': False,
            },
        ),
    ]
